$desktop: 1025px !default
$desktop-large: 1280px !default
$desktop-huge: 1600px !default

$viewport-short: 768px !default
$viewport-medium: 900px !default
$viewport-tall: 1200px !default

$aspect-skinny: '1/4' !default
$aspect-slim: '1/2' !default
$aspect-portrait: '2/3' !default
$aspect-square: '1/1' !default
$aspect-landscape: '3/2' !default
$aspect-wide: '2/1' !default
$aspect-fat: '4/1' !default

$aspect-iphone: '2/3' !default
$aspect-iphone5: '40/71' !default

=for-landscape
  @media only screen and (orientation: landscape)
    @content

=for-portrait
  @media only screen and (orientation: portrait)
    @content

// Specific device targeting
// Use: Only use if you want the style to respond to one device
// Example:
//     +respond_to(ipad, landscape)
// will apply CSS only to an iPad at landscape rotation

=for-device($device, $orientation: any)
  @each $d in $devices

    $name: nth($d, 1)
    $width: nth($d, 2)
    $height: nth($d, 3)
    $ratio: nth($d, 4)

    @if $name == $device
      @if $orientation == portrait
        @media only screen and (min-device-width: $width) and (max-device-width: $height) and (orientation: portrait) and (-webkit-min-device-pixel-ratio: $ratio)
          @content
      @else if $orientation == landscape
        @media only screen and (min-device-width: $width) and (max-device-width: $height) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: $ratio)
          @content
      @else
        @media only screen and (min-device-width: $width) and (max-device-width: $height) and (-webkit-min-device-pixel-ratio: $ratio)
          @content


//Apply CSS to a provided or pre-defined aspect ratio viewport
=for-aspect($ratio)
  @if $ratio == skinny
    @media only screen and (min-aspect-ratio: #{$aspect-skinny})
      @content

  @if $ratio == slim
    @media only screen and (min-aspect-ratio: #{$aspect-slim}) and (max-aspect-ratio: #{$aspect-skinny})
      @content

  @if $ratio == portrait
    @media only screen and (min-aspect-ratio: #{$aspect-portrait}) and (max-aspect-ratio: #{$aspect-slim})
      @content

  @if $ratio == square
    @media only screen and (min-aspect-ratio: #{$aspect-square}) and (max-aspect-ratio: #{$aspect-portrait})
      @content

  @if $ratio == landscape
    @media only screen and (max-aspect-ratio: #{$aspect-landscape}) and (min-aspect-ratio: #{$aspect-square})
      @content

  @if $ratio == wide
    @media only screen and (max-aspect-ratio: #{$aspect-wide}) and (min-aspect-ratio: #{$aspect-landscape})
      @content

  @if $ratio == fat
    @media only screen and (max-aspect-ratio: #{$aspect-fat})
      @content

  @if $ratio == iphone
    @media only screen and (device-aspect-ratio: #{$aspect-iphone})
      @content

  @if $ratio == iphone5
    @media only screen and (device-aspect-ratio: #{$aspect-iphone5})
      @content

// General breakpoint targeting
// Use: Only use if you want the style to apply to many devices
// Example:
//     +apply_to(smaller-than, iphone-portrait)
// will apply CSS to anything smaller than an iPhone-portrait
=for-breakpoint($ltgt, $device, $orientation: portrait, $dimension: width)
  $extrema: null

  @if $ltgt == less-than
    $extrema: max

  @if $ltgt == greater-than
    $extrema: min

  @if type_of($device) == number
    @media only screen and (#{$extrema}-#{$dimension}: $device)
      @content
  @else
    @each $d in $devices
      $name: nth($d, 1)
      $width: nth($d, 2)
      $height: nth($d, 3)
      $ratio: nth($d, 4)

      @if $name == $device
        @if $orientation == portrait
          @media only screen and (#{$extrema}-#{$dimension}: $width)
            @content
        @else
          @media only screen and (#{$extrema}-#{$dimension}: $height)
            @content


// Bracketed breakpoint targeting
// Example:
//     +between-breakpoints(1000px, 2000px)
// will apply CSS to viewports between 1000 and 2000px wide
=between-breakpoints($min, $max, $dimension: width)

  @media only screen and (min-device-#{$dimension}: $min) and (max-device-#{$dimension}: $max)
    @content

// Used to test the device config, will set the background colour of the element,
// and output the device name to the screen
// Usually it's most useful to put this on html or body
=device-test
  $count: 0
  $color-set: (red, orange, yellow, green, blue, indigo, violet, pink, brown, gray, black)

  @each $d in $devices
    $count: $count + 1
    $device-name: nth($d, 1)

    +for-device($device-name, portrait)
      background-color: nth($color-set, $count)

      &:before
        bottom: 0
        content: "#{$device-name} - Portrait, #{nth($d, 2)} ✕ #{nth($d, 3)}"
        display: block
        font-size: 2em
        font-weight: bold
        height: 4em
        left: 0
        margin: auto
        position: absolute
        right: 0
        text-align: center
        top: 0
        z-index: 10

    +for-device($device-name, landscape)
      background-color: nth($color-set, $count)

      &:before
        bottom: 0
        content: "#{$device-name} - Landscape, #{nth($d, 2)} ✕ #{nth($d, 3)}"
        display: block
        font-size: 1.5em
        font-weight: bold
        height: 4em
        left: 0
        margin: auto
        position: absolute
        right: 0
        text-align: center
        top: 0
        z-index: 10


